{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import ApartmentDetail from\"../components/ApartmentDetail.js\";var data=require(\"../util/Data.json\");var ApartmentDetailScreen=function(_Component){_inherits(ApartmentDetailScreen,_Component);function ApartmentDetailScreen(){var _getPrototypeOf2;var _this;_classCallCheck(this,ApartmentDetailScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ApartmentDetailScreen)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={apartments:data.apartments,filteredList:[]};return _this;}_createClass(ApartmentDetailScreen,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.route.params;var id=params.key;var filtered=this.state.apartments.filter(function(apartment){return apartment.id==id;});console.log(filtered);this.setState({filteredList:filtered});}},{key:\"render\",value:function render(){return React.createElement(View,{style:styles.container},React.createElement(ScrollView,null,this.state.filteredList.length>0&&this.state.filteredList.map(function(apartment){return React.createElement(ApartmentDetail,{key:apartment.id,apartmentObject:apartment});})));}}]);return ApartmentDetailScreen;}(Component);export{ApartmentDetailScreen as default};var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#ffffff\"}});","map":{"version":3,"sources":["/Users/saraluk/Documents/Firebase/resihub-react-native/screens/ApartmentDetailScreen.js"],"names":["React","Component","ApartmentDetail","data","require","ApartmentDetailScreen","state","apartments","filteredList","params","props","route","id","key","filtered","filter","apartment","console","log","setState","styles","container","length","map","StyleSheet","create","flex","backgroundColor"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,uLAEA,MAAOC,CAAAA,eAAP,wCAEA,GAAMC,CAAAA,IAAI,CAAGC,OAAO,qBAApB,C,GAEqBC,CAAAA,qB,8aACnBC,K,CAAQ,CACNC,UAAU,CAAEJ,IAAI,CAACI,UADX,CAENC,YAAY,CAAE,EAFR,C,8GAKY,CAClB,GAAMC,CAAAA,MAAM,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,MAAhC,CACA,GAAMG,CAAAA,EAAE,CAAGH,MAAM,CAACI,GAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,KAAKR,KAAL,CAAWC,UAAX,CAAsBQ,MAAtB,CAA6B,SAAAC,SAAS,CAAI,CACvD,MAAOA,CAAAA,SAAS,CAACJ,EAAV,EAAgBA,EAAvB,CACD,CAFc,CAAf,CAGAK,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACA,KAAKK,QAAL,CAAc,CACZX,YAAY,CAAEM,QADF,CAAd,EAGD,C,uCAEQ,CACP,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEM,MAAM,CAACC,SAApB,EACE,oBAAC,UAAD,MACG,KAAKf,KAAL,CAAWE,YAAX,CAAwBc,MAAxB,CAAiC,CAAjC,EACC,KAAKhB,KAAL,CAAWE,YAAX,CAAwBe,GAAxB,CAA4B,SAAAP,SAAS,QACnC,qBAAC,eAAD,EACE,GAAG,CAAEA,SAAS,CAACJ,EADjB,CAEE,eAAe,CAAEI,SAFnB,EADmC,EAArC,CAFJ,CADF,CADF,CAaD,C,mCAhCgDf,S,SAA9BI,qB,aAmCrB,GAAMe,CAAAA,MAAM,CAAGI,UAAU,CAACC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,IAAI,CAAE,CADG,CAETC,eAAe,CAAE,SAFR,CADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, View, ScrollView } from \"react-native\";\nimport ApartmentDetail from \"../components/ApartmentDetail.js\";\n\nconst data = require(\"../util/Data.json\");\n\nexport default class ApartmentDetailScreen extends Component {\n  state = {\n    apartments: data.apartments,\n    filteredList: []\n  };\n\n  componentDidMount() {\n    const params = this.props.route.params;\n    const id = params.key;\n    let filtered = this.state.apartments.filter(apartment => {\n      return apartment.id == id;\n    });\n    console.log(filtered);\n    this.setState({\n      filteredList: filtered\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView>\n          {this.state.filteredList.length > 0 &&\n            this.state.filteredList.map(apartment => (\n              <ApartmentDetail\n                key={apartment.id}\n                apartmentObject={apartment}\n              ></ApartmentDetail>\n            ))}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}