{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{deviceHeight,deviceWidth}from\"../constants/Layout\";import{Ionicons}from'@expo/vector-icons';var SearchBar=function(_Component){_inherits(SearchBar,_Component);function SearchBar(){_classCallCheck(this,SearchBar);return _possibleConstructorReturn(this,_getPrototypeOf(SearchBar).apply(this,arguments));}_createClass(SearchBar,[{key:\"render\",value:function render(){var _this$props=this.props,handleSearch=_this$props.handleSearch,searchText=_this$props.searchText;return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.rowContainer},React.createElement(View,{style:styles.searchBarContainer},React.createElement(Ionicons,{style:styles.searchIcon,name:\"ios-search\"}),React.createElement(TextInput,{style:styles.searchTextInput,onChangeText:function onChangeText(text){return handleSearch(text);},value:searchText,placeholder:\"Type the Area you want to live\"}))),React.createElement(View,{style:styles.rowContainer},React.createElement(View,{style:styles.rowContainer},React.createElement(Text,{style:styles.area},this.props.mainArea),React.createElement(Text,{style:styles.results},\"(\",this.props.results,\" Results)\"))));}}]);return SearchBar;}(Component);export{SearchBar as default};var styles=StyleSheet.create({container:{height:2*(deviceHeight/20),marginVertical:0.5*(deviceHeight/20),marginHorizontal:0.5*(deviceWidth/20),justifyContent:'space-between',borderBottomColor:'#a5c1d6',borderBottomWidth:2},rowContainer:{flexDirection:'row',justifyContent:'space-between'},searchBarContainer:{flexDirection:'row',alignItems:'center',width:19*(deviceWidth/20),height:deviceHeight/20,borderWidth:2,borderColor:'#dddddd',borderRadius:10},searchTextInput:{width:14*(deviceWidth/20),height:deviceHeight/20},searchIcon:{color:'#dddddd',fontSize:0.5*(deviceHeight/20),marginHorizontal:0.3*(deviceWidth/20)},filterButton:{width:4.5*(deviceWidth/20),height:deviceHeight/20,backgroundColor:'#0a2e49',justifyContent:'center',alignItems:'center',borderRadius:10},filterTextButton:{color:'#ffffff',fontSize:0.5*(deviceHeight/20)},area:{fontSize:0.4*(deviceHeight/20),fontWeight:'bold',marginRight:5},results:{fontSize:0.4*(deviceHeight/20)},sortedby:{fontSize:0.4*(deviceHeight/20)}});","map":{"version":3,"sources":["/Users/saraluk/Documents/resihub-react-native/components/SearchBar.js"],"names":["React","Component","deviceHeight","deviceWidth","Ionicons","SearchBar","props","handleSearch","searchText","styles","container","rowContainer","searchBarContainer","searchIcon","searchTextInput","text","area","mainArea","results","StyleSheet","create","height","marginVertical","marginHorizontal","justifyContent","borderBottomColor","borderBottomWidth","flexDirection","alignItems","width","borderWidth","borderColor","borderRadius","color","fontSize","filterButton","backgroundColor","filterTextButton","fontWeight","marginRight","sortedby"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TextInput } from 'react-native';\nimport { deviceHeight, deviceWidth } from '../constants/Layout';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default class SearchBar extends Component {\n  render() {\n    const { handleSearch, searchText } = this.props;\n    return (\n      <View style={styles.container}>\n        <View style={styles.rowContainer}>\n          <View style={styles.searchBarContainer}>\n            <Ionicons style={styles.searchIcon} name='ios-search' />\n            <TextInput\n              style={styles.searchTextInput}\n              onChangeText={(text) => handleSearch(text)}\n              value={searchText}\n              placeholder='Type the Area you want to live'\n            />\n          </View>\n        </View>\n        <View style={styles.rowContainer}>\n          <View style={styles.rowContainer}>\n            <Text style={styles.area}>{this.props.mainArea}</Text>\n            <Text style={styles.results}>({this.props.results} Results)</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 2 * (deviceHeight / 20),\n    marginVertical: 0.5 * (deviceHeight / 20),\n    marginHorizontal: 0.5 * (deviceWidth / 20),\n    justifyContent: 'space-between',\n    borderBottomColor: '#a5c1d6',\n    borderBottomWidth: 2,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  searchBarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: 19 * (deviceWidth / 20),\n    height: deviceHeight / 20,\n    borderWidth: 2,\n    borderColor: '#dddddd',\n    borderRadius: 10,\n  },\n  searchTextInput: {\n    width: 14 * (deviceWidth / 20),\n    height: deviceHeight / 20,\n  },\n  searchIcon: {\n    color: '#dddddd',\n    fontSize: 0.5 * (deviceHeight / 20),\n    marginHorizontal: 0.3 * (deviceWidth / 20),\n  },\n  filterButton: {\n    width: 4.5 * (deviceWidth / 20),\n    height: deviceHeight / 20,\n    backgroundColor: '#0a2e49',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n  },\n  filterTextButton: {\n    color: '#ffffff',\n    fontSize: 0.5 * (deviceHeight / 20),\n  },\n  area: {\n    fontSize: 0.4 * (deviceHeight / 20),\n    fontWeight: 'bold',\n    marginRight: 5,\n  },\n  results: {\n    fontSize: 0.4 * (deviceHeight / 20),\n  },\n  sortedby: {\n    fontSize: 0.4 * (deviceHeight / 20),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}