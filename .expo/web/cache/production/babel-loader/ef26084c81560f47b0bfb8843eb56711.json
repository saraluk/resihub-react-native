{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import{ScrollView}from\"react-native-gesture-handler\";import{deviceHeight,deviceWidth}from\"../constants/Layout\";import ApartmentCard from\"../components/ApartmentCard\";var list=require(\"../util/SavedList.json\");var SavedScreen=function(_Component){_inherits(SavedScreen,_Component);function SavedScreen(){var _getPrototypeOf2;var _this;_classCallCheck(this,SavedScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SavedScreen)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={savedList:list.savedApartment};_this.handleRefresh=function(){_this.setState({savedList:list.savedApartment});};_this.handleToggle=function(apartmentId){var apartment=_this.state.savedList.find(function(apartment){return apartment.id==apartmentId;});apartment[\"isSaved\"]=!apartment[\"isSaved\"];if(apartment[\"isSaved\"]==true){list.savedApartment.push(apartment);_this.setState({savedList:list.savedApartment});}else{list[\"savedApartment\"]=list.savedApartment.filter(function(apartment){return apartment.id!==apartmentId;});_this.setState(function(){return{savedList:list.savedApartment};});}};return _this;}_createClass(SavedScreen,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({savedList:list.savedApartment});}},{key:\"render\",value:function render(){var _this2=this;var savedList=this.state.savedList;return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.buttonContainer},React.createElement(View,{style:styles.rowContainer},React.createElement(TouchableHighlight,{onPress:this.handleRefresh,underlayColor:\"transparent\",style:styles.button},React.createElement(View,null,React.createElement(Text,{style:styles.buttonText},\"Refresh\"))))),React.createElement(ScrollView,null,savedList.length>0&&savedList.map(function(apartment){return React.createElement(ApartmentCard,{key:apartment.id,apartmentObject:apartment,isSaved:apartment[\"isSaved\"],handleToggle:_this2.handleToggle,onPress:function onPress(){return _this2.props.navigation.navigate(\"ApartmentDetailScreen\",{key:apartment.id});}});})));}}]);return SavedScreen;}(Component);export{SavedScreen as default};var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#ffffff\",paddingTop:0.5*deviceHeight/20},rowContainer:{flexDirection:\"row\",marginBottom:0.2*deviceHeight/20,marginRight:0.5*deviceHeight/20},buttonContainer:{alignItems:\"flex-end\"},button:{height:0.7*(deviceHeight/20),width:4*(deviceWidth/20),borderRadius:50,justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#0a2e49\"},buttonText:{color:\"#ffffff\"},space:{width:0.3*(deviceWidth/20)}});","map":{"version":3,"sources":["/Users/saraluk/Documents/resihub-react-native/screens/SavedScreen.js"],"names":["React","Component","ScrollView","deviceHeight","deviceWidth","ApartmentCard","list","require","SavedScreen","state","savedList","savedApartment","handleRefresh","setState","handleToggle","apartmentId","apartment","find","id","push","filter","styles","container","buttonContainer","rowContainer","button","buttonText","length","map","props","navigation","navigate","key","StyleSheet","create","flex","backgroundColor","paddingTop","flexDirection","marginBottom","marginRight","alignItems","height","width","borderRadius","justifyContent","color","space"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, Text, View, TouchableHighlight } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { deviceHeight, deviceWidth } from \"../constants/Layout\";\nimport ApartmentCard from \"../components/ApartmentCard\";\n\nconst list = require(\"../util/SavedList.json\");\nexport default class SavedScreen extends Component {\n  state = {\n    savedList: list.savedApartment,\n  };\n\n  componentDidMount() {\n    this.setState({\n      savedList: list.savedApartment,\n    });\n  }\n\n  handleRefresh = () => {\n    this.setState({\n      savedList: list.savedApartment,\n    });\n  };\n\n  handleToggle = (apartmentId) => {\n    const apartment = this.state.savedList.find(\n      (apartment) => apartment.id == apartmentId\n    );\n    apartment[\"isSaved\"] = !apartment[\"isSaved\"];\n    if (apartment[\"isSaved\"] == true) {\n      list.savedApartment.push(apartment);\n      this.setState({\n        savedList: list.savedApartment,\n      });\n    } else {\n      list[\"savedApartment\"] = list.savedApartment.filter(\n        (apartment) => apartment.id !== apartmentId\n      );\n      this.setState(() => ({\n        savedList: list.savedApartment,\n      }));\n    }\n  };\n\n  render() {\n    const { savedList } = this.state;\n    return (\n      <View style={styles.container}>\n        <View style={styles.buttonContainer}>\n          <View style={styles.rowContainer}>\n            <TouchableHighlight\n              onPress={this.handleRefresh}\n              underlayColor='transparent'\n              style={styles.button}\n            >\n              <View>\n                <Text style={styles.buttonText}>Refresh</Text>\n              </View>\n            </TouchableHighlight>\n          </View>\n        </View>\n        <ScrollView>\n          {savedList.length > 0 &&\n            savedList.map((apartment) => (\n              <ApartmentCard\n                key={apartment.id}\n                apartmentObject={apartment}\n                isSaved={apartment[\"isSaved\"]}\n                handleToggle={this.handleToggle}\n                onPress={() =>\n                  this.props.navigation.navigate(\"ApartmentDetailScreen\", {\n                    key: apartment.id,\n                  })\n                }\n              />\n            ))}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    paddingTop: (0.5 * deviceHeight) / 20,\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    marginBottom: (0.2 * deviceHeight) / 20,\n    marginRight: (0.5 * deviceHeight) / 20,\n  },\n  buttonContainer: {\n    alignItems: \"flex-end\",\n  },\n  button: {\n    height: 0.7 * (deviceHeight / 20),\n    width: 4 * (deviceWidth / 20),\n    borderRadius: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#0a2e49\",\n  },\n  buttonText: {\n    color: \"#ffffff\",\n  },\n  space: {\n    width: 0.3 * (deviceWidth / 20),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}