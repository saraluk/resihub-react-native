{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import{deviceHeight,deviceWidth}from\"../constants/Layout\";import{TextInput}from\"react-native-gesture-handler\";var ContactForm=function(_Component){_inherits(ContactForm,_Component);function ContactForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,ContactForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ContactForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={firstName:\"\",lastName:\"\",email:\"\",phone:\"\",message:\"\"};_this.newState=function(){_this.setState({firstName:\"\",lastName:\"\",email:\"\",phone:\"\",message:\"\"});};return _this;}_createClass(ContactForm,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.rowContainer},React.createElement(TextInput,{style:styles.textInputHalf,onChangeText:function onChangeText(firstName){return _this2.setState({firstName:firstName});},value:this.state.firstName,placeholder:\"First Name\"}),React.createElement(TextInput,{style:styles.textInputHalf,onChangeText:function onChangeText(lastName){return _this2.setState({lastName:lastName});},value:this.state.lastName,placeholder:\"Last Name\"})),React.createElement(View,{style:styles.rowContainer},React.createElement(TextInput,{style:styles.textInputHalf,onChangeText:function onChangeText(email){return _this2.setState({email:email});},value:this.state.email,placeholder:\"Email Address\"}),React.createElement(TextInput,{style:styles.textInputHalf,onChangeText:function onChangeText(phone){return _this2.setState({phone:phone});},value:this.state.phone,placeholder:\"Phone Number\"})),React.createElement(View,{style:styles.rowContainer},React.createElement(TextInput,{style:styles.textInputFull,multiline:true,onChangeText:function onChangeText(message){return _this2.setState({message:message});},value:this.state.message,placeholder:\"Messages...\"})),React.createElement(View,{style:styles.buttonContainer},React.createElement(View,{style:styles.rowContainer},React.createElement(TouchableHighlight,{underlayColor:\"transparent\",style:styles.button,onPress:function onPress(){alert(_this2.state.firstName+\", your message has been sent!\");}},React.createElement(View,null,React.createElement(Text,{style:styles.buttonText},\"Send\"))),React.createElement(View,{style:styles.space}),React.createElement(TouchableHighlight,{underlayColor:\"transparent\",style:styles.button},React.createElement(View,null,React.createElement(Text,{style:styles.buttonText,onPress:this.newState},\"Reset\"))))));}}]);return ContactForm;}(Component);export{ContactForm as default};var styles=StyleSheet.create({container:{flex:1,paddingVertical:0.5*(deviceWidth/20),paddingRight:2*(deviceWidth/20)},rowContainer:{flexDirection:\"row\",marginBottom:0.2*(deviceHeight/20)},textInputHalf:{height:0.8*(deviceHeight/20),width:8*(deviceWidth/20),textAlign:\"left\",borderColor:\"#dddddd\",borderWidth:1,backgroundColor:\"#eaeaea\",marginRight:0.5*(deviceWidth/20),padding:4},textInputFull:{height:3*(deviceHeight/20),width:16.5*(deviceWidth/20),textAlign:\"left\",borderColor:\"#dddddd\",borderWidth:1,backgroundColor:\"#eaeaea\",marginRight:0.5*(deviceWidth/20),padding:4},buttonContainer:{alignItems:\"flex-end\"},button:{height:0.7*(deviceHeight/20),width:4*(deviceWidth/20),borderRadius:50,justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#0a2e49\"},buttonText:{color:\"#ffffff\"},space:{width:0.3*(deviceWidth/20)}});","map":{"version":3,"sources":["/Users/saraluk/Documents/resihub-react-native/components/ContactForm.js"],"names":["React","Component","deviceHeight","deviceWidth","TextInput","ContactForm","state","firstName","lastName","email","phone","message","newState","setState","styles","container","rowContainer","textInputHalf","textInputFull","buttonContainer","button","alert","buttonText","space","StyleSheet","create","flex","paddingVertical","paddingRight","flexDirection","marginBottom","height","width","textAlign","borderColor","borderWidth","backgroundColor","marginRight","padding","alignItems","borderRadius","justifyContent","color"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,mTAQA,OAASC,YAAT,CAAuBC,WAAvB,2BACA,OAASC,SAAT,KAA0B,8BAA1B,C,GAEqBC,CAAAA,W,sYACnBC,K,CAAQ,CACNC,SAAS,CAAE,EADL,CAENC,QAAQ,CAAE,EAFJ,CAGNC,KAAK,CAAE,EAHD,CAINC,KAAK,CAAE,EAJD,CAKNC,OAAO,CAAE,EALH,C,OAORC,Q,CAAW,UAAM,CACf,MAAKC,QAAL,CAAc,CACZN,SAAS,CAAE,EADC,CAEZC,QAAQ,CAAE,EAFE,CAGZC,KAAK,CAAE,EAHK,CAIZC,KAAK,CAAE,EAJK,CAKZC,OAAO,CAAE,EALG,CAAd,EAOD,C,8EAEQ,iBACP,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEG,MAAM,CAACC,SAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAED,MAAM,CAACE,YAApB,EACE,oBAAC,SAAD,EACE,KAAK,CAAEF,MAAM,CAACG,aADhB,CAEE,YAAY,CAAE,sBAACV,SAAD,QAAe,CAAA,MAAI,CAACM,QAAL,CAAc,CAAEN,SAAS,CAATA,SAAF,CAAd,CAAf,EAFhB,CAGE,KAAK,CAAE,KAAKD,KAAL,CAAWC,SAHpB,CAIE,WAAW,CAAC,YAJd,EADF,CAOE,oBAAC,SAAD,EACE,KAAK,CAAEO,MAAM,CAACG,aADhB,CAEE,YAAY,CAAE,sBAACT,QAAD,QAAc,CAAA,MAAI,CAACK,QAAL,CAAc,CAAEL,QAAQ,CAARA,QAAF,CAAd,CAAd,EAFhB,CAGE,KAAK,CAAE,KAAKF,KAAL,CAAWE,QAHpB,CAIE,WAAW,CAAC,WAJd,EAPF,CADF,CAeE,oBAAC,IAAD,EAAM,KAAK,CAAEM,MAAM,CAACE,YAApB,EACE,oBAAC,SAAD,EACE,KAAK,CAAEF,MAAM,CAACG,aADhB,CAEE,YAAY,CAAE,sBAACR,KAAD,QAAW,CAAA,MAAI,CAACI,QAAL,CAAc,CAAEJ,KAAK,CAALA,KAAF,CAAd,CAAX,EAFhB,CAGE,KAAK,CAAE,KAAKH,KAAL,CAAWG,KAHpB,CAIE,WAAW,CAAC,eAJd,EADF,CAOE,oBAAC,SAAD,EACE,KAAK,CAAEK,MAAM,CAACG,aADhB,CAEE,YAAY,CAAE,sBAACP,KAAD,QAAW,CAAA,MAAI,CAACG,QAAL,CAAc,CAAEH,KAAK,CAALA,KAAF,CAAd,CAAX,EAFhB,CAGE,KAAK,CAAE,KAAKJ,KAAL,CAAWI,KAHpB,CAIE,WAAW,CAAC,cAJd,EAPF,CAfF,CA6BE,oBAAC,IAAD,EAAM,KAAK,CAAEI,MAAM,CAACE,YAApB,EACE,oBAAC,SAAD,EACE,KAAK,CAAEF,MAAM,CAACI,aADhB,CAEE,SAAS,CAAE,IAFb,CAGE,YAAY,CAAE,sBAACP,OAAD,QAAa,CAAA,MAAI,CAACE,QAAL,CAAc,CAAEF,OAAO,CAAPA,OAAF,CAAd,CAAb,EAHhB,CAIE,KAAK,CAAE,KAAKL,KAAL,CAAWK,OAJpB,CAKE,WAAW,CAAC,aALd,EADF,CA7BF,CAsCE,oBAAC,IAAD,EAAM,KAAK,CAAEG,MAAM,CAACK,eAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEL,MAAM,CAACE,YAApB,EACE,oBAAC,kBAAD,EACE,aAAa,CAAC,aADhB,CAEE,KAAK,CAAEF,MAAM,CAACM,MAFhB,CAGE,OAAO,CAAE,kBAAM,CACbC,KAAK,CAAC,MAAI,CAACf,KAAL,CAAWC,SAAX,CAAuB,+BAAxB,CAAL,CACD,CALH,EAOE,oBAAC,IAAD,MACE,oBAAC,IAAD,EAAM,KAAK,CAAEO,MAAM,CAACQ,UAApB,SADF,CAPF,CADF,CAYE,oBAAC,IAAD,EAAM,KAAK,CAAER,MAAM,CAACS,KAApB,EAZF,CAaE,oBAAC,kBAAD,EACE,aAAa,CAAC,aADhB,CAEE,KAAK,CAAET,MAAM,CAACM,MAFhB,EAIE,oBAAC,IAAD,MACE,oBAAC,IAAD,EAAM,KAAK,CAAEN,MAAM,CAACQ,UAApB,CAAgC,OAAO,CAAE,KAAKV,QAA9C,UADF,CAJF,CAbF,CADF,CAtCF,CADF,CAmED,C,yBAtFsCX,S,SAApBI,W,aAyFrB,GAAMS,CAAAA,MAAM,CAAGU,UAAU,CAACC,MAAX,CAAkB,CAC/BV,SAAS,CAAE,CACTW,IAAI,CAAE,CADG,CAETC,eAAe,CAAE,KAAOxB,WAAW,CAAG,EAArB,CAFR,CAGTyB,YAAY,CAAE,GAAKzB,WAAW,CAAG,EAAnB,CAHL,CADoB,CAM/Ba,YAAY,CAAE,CACZa,aAAa,CAAE,KADH,CAEZC,YAAY,CAAE,KAAO5B,YAAY,CAAG,EAAtB,CAFF,CANiB,CAU/Be,aAAa,CAAE,CACbc,MAAM,CAAE,KAAO7B,YAAY,CAAG,EAAtB,CADK,CAEb8B,KAAK,CAAE,GAAK7B,WAAW,CAAG,EAAnB,CAFM,CAGb8B,SAAS,CAAE,MAHE,CAIbC,WAAW,CAAE,SAJA,CAKbC,WAAW,CAAE,CALA,CAMbC,eAAe,CAAE,SANJ,CAObC,WAAW,CAAE,KAAOlC,WAAW,CAAG,EAArB,CAPA,CAQbmC,OAAO,CAAE,CARI,CAVgB,CAoB/BpB,aAAa,CAAE,CACba,MAAM,CAAE,GAAK7B,YAAY,CAAG,EAApB,CADK,CAEb8B,KAAK,CAAE,MAAQ7B,WAAW,CAAG,EAAtB,CAFM,CAGb8B,SAAS,CAAE,MAHE,CAIbC,WAAW,CAAE,SAJA,CAKbC,WAAW,CAAE,CALA,CAMbC,eAAe,CAAE,SANJ,CAObC,WAAW,CAAE,KAAOlC,WAAW,CAAG,EAArB,CAPA,CAQbmC,OAAO,CAAE,CARI,CApBgB,CA8B/BnB,eAAe,CAAE,CACfoB,UAAU,CAAE,UADG,CA9Bc,CAiC/BnB,MAAM,CAAE,CACNW,MAAM,CAAE,KAAO7B,YAAY,CAAG,EAAtB,CADF,CAEN8B,KAAK,CAAE,GAAK7B,WAAW,CAAG,EAAnB,CAFD,CAGNqC,YAAY,CAAE,EAHR,CAINC,cAAc,CAAE,QAJV,CAKNF,UAAU,CAAE,QALN,CAMNH,eAAe,CAAE,SANX,CAjCuB,CAyC/Bd,UAAU,CAAE,CACVoB,KAAK,CAAE,SADG,CAzCmB,CA4C/BnB,KAAK,CAAE,CACLS,KAAK,CAAE,KAAO7B,WAAW,CAAG,EAArB,CADF,CA5CwB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableHighlight,\n} from \"react-native\";\nimport { deviceHeight, deviceWidth } from \"../constants/Layout\";\nimport { TextInput } from \"react-native-gesture-handler\";\n\nexport default class ContactForm extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n  };\n  newState = () => {\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      message: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.rowContainer}>\n          <TextInput\n            style={styles.textInputHalf}\n            onChangeText={(firstName) => this.setState({ firstName })}\n            value={this.state.firstName}\n            placeholder='First Name'\n          />\n          <TextInput\n            style={styles.textInputHalf}\n            onChangeText={(lastName) => this.setState({ lastName })}\n            value={this.state.lastName}\n            placeholder='Last Name'\n          />\n        </View>\n        <View style={styles.rowContainer}>\n          <TextInput\n            style={styles.textInputHalf}\n            onChangeText={(email) => this.setState({ email })}\n            value={this.state.email}\n            placeholder='Email Address'\n          />\n          <TextInput\n            style={styles.textInputHalf}\n            onChangeText={(phone) => this.setState({ phone })}\n            value={this.state.phone}\n            placeholder='Phone Number'\n          />\n        </View>\n        <View style={styles.rowContainer}>\n          <TextInput\n            style={styles.textInputFull}\n            multiline={true}\n            onChangeText={(message) => this.setState({ message })}\n            value={this.state.message}\n            placeholder='Messages...'\n          />\n        </View>\n        <View style={styles.buttonContainer}>\n          <View style={styles.rowContainer}>\n            <TouchableHighlight\n              underlayColor='transparent'\n              style={styles.button}\n              onPress={() => {\n                alert(this.state.firstName + \", your message has been sent!\");\n              }}\n            >\n              <View>\n                <Text style={styles.buttonText}>Send</Text>\n              </View>\n            </TouchableHighlight>\n            <View style={styles.space}></View>\n            <TouchableHighlight\n              underlayColor='transparent'\n              style={styles.button}\n            >\n              <View>\n                <Text style={styles.buttonText} onPress={this.newState}>\n                  Reset\n                </Text>\n              </View>\n            </TouchableHighlight>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: 0.5 * (deviceWidth / 20),\n    paddingRight: 2 * (deviceWidth / 20),\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    marginBottom: 0.2 * (deviceHeight / 20),\n  },\n  textInputHalf: {\n    height: 0.8 * (deviceHeight / 20),\n    width: 8 * (deviceWidth / 20),\n    textAlign: \"left\",\n    borderColor: \"#dddddd\",\n    borderWidth: 1,\n    backgroundColor: \"#eaeaea\",\n    marginRight: 0.5 * (deviceWidth / 20),\n    padding: 4,\n  },\n  textInputFull: {\n    height: 3 * (deviceHeight / 20),\n    width: 16.5 * (deviceWidth / 20),\n    textAlign: \"left\",\n    borderColor: \"#dddddd\",\n    borderWidth: 1,\n    backgroundColor: \"#eaeaea\",\n    marginRight: 0.5 * (deviceWidth / 20),\n    padding: 4,\n  },\n  buttonContainer: {\n    alignItems: \"flex-end\",\n  },\n  button: {\n    height: 0.7 * (deviceHeight / 20),\n    width: 4 * (deviceWidth / 20),\n    borderRadius: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#0a2e49\",\n  },\n  buttonText: {\n    color: \"#ffffff\",\n  },\n  space: {\n    width: 0.3 * (deviceWidth / 20),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}