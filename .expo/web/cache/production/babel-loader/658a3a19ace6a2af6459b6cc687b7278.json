{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from\"react\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Carousel,{Pagination}from\"react-native-snap-carousel\";import styles from\"./SliderBox.style\";var width=Dimensions.get(\"window\").width;export var SliderBox=function(_Component){_inherits(SliderBox,_Component);function SliderBox(props){var _this;_classCallCheck(this,SliderBox);_this=_possibleConstructorReturn(this,_getPrototypeOf(SliderBox).call(this,props));_this.state={currentImage:0,loading:[]};_this.onCurrentImagePressedHandler=_this.onCurrentImagePressedHandler.bind(_assertThisInitialized(_this));_this.onSnap=_this.onSnap.bind(_assertThisInitialized(_this));return _this;}_createClass(SliderBox,[{key:\"componentDidMount\",value:function componentDidMount(){var a=_toConsumableArray(Array(this.props.images.length).keys()).map(function(i){return false;});}},{key:\"onCurrentImagePressedHandler\",value:function onCurrentImagePressedHandler(){if(this.props.onCurrentImagePressed){this.props.onCurrentImagePressed(this.state.currentImage);}}},{key:\"onSnap\",value:function onSnap(index){var _this2=this;var currentImageEmitter=this.props.currentImageEmitter;this.setState({currentImage:index},function(){if(currentImageEmitter)currentImageEmitter(_this2.state.currentImage);});}},{key:\"_renderItem\",value:function _renderItem(_ref){var _this3=this;var item=_ref.item,index=_ref.index;var _this$props=this.props,ImageComponent=_this$props.ImageComponent,_this$props$ImageComp=_this$props.ImageComponentStyle,ImageComponentStyle=_this$props$ImageComp===void 0?{}:_this$props$ImageComp,sliderBoxHeight=_this$props.sliderBoxHeight,disableOnPress=_this$props.disableOnPress,resizeMethod=_this$props.resizeMethod,resizeMode=_this$props.resizeMode,_this$props$imageLoad=_this$props.imageLoadingColor,imageLoadingColor=_this$props$imageLoad===void 0?\"#E91E63\":_this$props$imageLoad;return React.createElement(View,{style:{position:\"relative\",justifyContent:\"center\"}},React.createElement(TouchableHighlight,{key:index,onPress:function onPress(){return!disableOnPress&&_this3.onCurrentImagePressedHandler();}},React.createElement(ImageComponent,_extends({style:[{width:\"100%\",height:sliderBoxHeight||200,alignSelf:\"center\"},ImageComponentStyle],source:typeof item===\"string\"?{uri:item}:item,resizeMethod:resizeMethod||\"resize\",resizeMode:resizeMode||\"cover\",onLoad:function onLoad(){},onLoadStart:function onLoadStart(){},onLoadEnd:function onLoadEnd(){var t=_this3.state.loading;t[index]=true;_this3.setState({loading:t});}},this.props))),!this.state.loading[index]&&React.createElement(ActivityIndicator,{size:\"large\",color:imageLoadingColor,style:{position:\"absolute\",alignSelf:\"center\"}}));}},{key:\"render\",value:function render(){var _this4=this;var _this$props2=this.props,images=_this$props2.images,circleLoop=_this$props2.circleLoop,autoplay=_this$props2.autoplay,parentWidth=_this$props2.parentWidth,loopClonesPerSide=_this$props2.loopClonesPerSide;return React.createElement(View,null,React.createElement(Carousel,_extends({layout:\"default\",data:images,ref:function ref(c){return _this4._ref=c;},loop:circleLoop||false,enableSnap:true,autoplay:autoplay||false,itemWidth:parentWidth||width,sliderWidth:parentWidth||width,loopClonesPerSide:loopClonesPerSide||5,renderItem:function renderItem(item){return _this4._renderItem(item);},onSnapToItem:function onSnapToItem(index){return _this4.onSnap(index);}},this.props)),images.length>1&&this.pagination);}},{key:\"pagination\",get:function get(){var currentImage=this.state.currentImage;var _this$props3=this.props,images=_this$props3.images,dotStyle=_this$props3.dotStyle,dotColor=_this$props3.dotColor,inactiveDotColor=_this$props3.inactiveDotColor,paginationBoxStyle=_this$props3.paginationBoxStyle,paginationBoxVerticalPadding=_this$props3.paginationBoxVerticalPadding;return React.createElement(Pagination,_extends({borderRadius:2,dotsLength:images.length,activeDotIndex:currentImage,dotStyle:dotStyle||styles.dotStyle,dotColor:dotColor||colors.dotColors,inactiveDotColor:inactiveDotColor||colors.white,inactiveDotScale:0.8,carouselRef:this._ref,inactiveDotOpacity:0.8,tappableDots:!!this._ref,containerStyle:[styles.paginationBoxStyle,paginationBoxVerticalPadding?{paddingVertical:paginationBoxVerticalPadding}:{},paginationBoxStyle?paginationBoxStyle:{}]},this.props));}}]);return SliderBox;}(Component);var colors={dotColors:\"#BDBDBD\",white:\"#FFFFFF\"};SliderBox.defaultProps={ImageComponent:Image};","map":{"version":3,"sources":["/Users/saraluk/Documents/resihub-react-native/node_modules/react-native-image-slider-box/dist/SliderBox.js"],"names":["React","Component","Carousel","Pagination","styles","width","Dimensions","get","SliderBox","props","state","currentImage","loading","onCurrentImagePressedHandler","bind","onSnap","a","Array","images","length","keys","map","i","onCurrentImagePressed","index","currentImageEmitter","setState","item","ImageComponent","ImageComponentStyle","sliderBoxHeight","disableOnPress","resizeMethod","resizeMode","imageLoadingColor","position","justifyContent","height","alignSelf","uri","t","circleLoop","autoplay","parentWidth","loopClonesPerSide","c","_ref","_renderItem","pagination","dotStyle","dotColor","inactiveDotColor","paginationBoxStyle","paginationBoxVerticalPadding","colors","dotColors","white","paddingVertical","defaultProps","Image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Image,\n  ActivityIndicator,\n  TouchableHighlight,\n  Dimensions\n} from \"react-native\";\n\nimport Carousel, { Pagination } from \"react-native-snap-carousel\"; //Thank From distributer(s) of this lib\nimport styles from \"./SliderBox.style\";\n\n// -------------------Props---------------------\n// images\n// onCurrentImagePressed\n// sliderBoxHeight\n// parentWidth\n// dotColor\n// inactiveDotColor\n// dotStyle\n// paginationBoxVerticalPadding\n// circleLoop\n// autoplay\n// ImageComponent\n// paginationBoxStyle\n// resizeMethod\n// resizeMode\n// ImageComponentStyle,\n// imageLoadingColor = \"#E91E63\"\n\nconst width = Dimensions.get(\"window\").width;\n\nexport class SliderBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImage: 0,\n      loading: []\n    };\n    this.onCurrentImagePressedHandler = this.onCurrentImagePressedHandler.bind(\n      this\n    );\n    this.onSnap = this.onSnap.bind(this);\n  }\n  componentDidMount() {\n    let a = [...Array(this.props.images.length).keys()].map(i => false);\n  }\n  onCurrentImagePressedHandler() {\n    if (this.props.onCurrentImagePressed) {\n      this.props.onCurrentImagePressed(this.state.currentImage);\n    }\n  }\n\n  onSnap(index) {\n    const { currentImageEmitter } = this.props;\n    this.setState({ currentImage: index }, () => {\n      if (currentImageEmitter) currentImageEmitter(this.state.currentImage);\n    });\n  }\n\n  _renderItem({ item, index }) {\n    const {\n      ImageComponent,\n      ImageComponentStyle = {},\n      sliderBoxHeight,\n      disableOnPress,\n      resizeMethod,\n      resizeMode,\n      imageLoadingColor = \"#E91E63\"\n    } = this.props;\n    return (\n      <View\n        style={{\n          position: \"relative\",\n          justifyContent: \"center\"\n        }}\n      >\n        <TouchableHighlight\n          key={index}\n          onPress={() => !disableOnPress && this.onCurrentImagePressedHandler()}\n        >\n          <ImageComponent\n            style={[\n              {\n                width: \"100%\",\n                height: sliderBoxHeight || 200,\n                alignSelf: \"center\"\n              },\n              ImageComponentStyle\n            ]}\n            source={typeof item === \"string\" ? { uri: item } : item}\n            resizeMethod={resizeMethod || \"resize\"}\n            resizeMode={resizeMode || \"cover\"}\n            onLoad={() => {}}\n            onLoadStart={() => {}}\n            onLoadEnd={() => {\n              let t = this.state.loading;\n              t[index] = true;\n              this.setState({ loading: t });\n            }}\n            {...this.props}\n          />\n        </TouchableHighlight>\n        {!this.state.loading[index] && (\n          <ActivityIndicator\n            size=\"large\"\n            color={imageLoadingColor}\n            style={{\n              position: \"absolute\",\n              alignSelf: \"center\"\n            }}\n          />\n        )}\n      </View>\n    );\n  }\n\n  get pagination() {\n    const { currentImage } = this.state;\n    const {\n      images,\n      dotStyle,\n      dotColor,\n      inactiveDotColor,\n      paginationBoxStyle,\n      paginationBoxVerticalPadding\n    } = this.props;\n    return (\n      <Pagination\n        borderRadius={2}\n        dotsLength={images.length}\n        activeDotIndex={currentImage}\n        dotStyle={dotStyle || styles.dotStyle}\n        dotColor={dotColor || colors.dotColors}\n        inactiveDotColor={inactiveDotColor || colors.white}\n        inactiveDotScale={0.8}\n        carouselRef={this._ref}\n        inactiveDotOpacity={0.8}\n        tappableDots={!!this._ref}\n        containerStyle={[\n          styles.paginationBoxStyle,\n          paginationBoxVerticalPadding\n            ? { paddingVertical: paginationBoxVerticalPadding }\n            : {},\n          paginationBoxStyle ? paginationBoxStyle : {}\n        ]}\n        {...this.props}\n      />\n    );\n  }\n\n  render() {\n    const {\n      images,\n      circleLoop,\n      autoplay,\n      parentWidth,\n      loopClonesPerSide\n    } = this.props;\n    return (\n      <View>\n        <Carousel\n          layout={\"default\"}\n          data={images}\n          ref={c => (this._ref = c)}\n          loop={circleLoop || false}\n          enableSnap={true}\n          autoplay={autoplay || false}\n          itemWidth={parentWidth || width}\n          sliderWidth={parentWidth || width}\n          loopClonesPerSide={loopClonesPerSide || 5}\n          renderItem={item => this._renderItem(item)}\n          onSnapToItem={index => this.onSnap(index)}\n          {...this.props}\n        />\n        {images.length > 1 && this.pagination}\n      </View>\n    );\n  }\n}\n\nconst colors = {\n  dotColors: \"#BDBDBD\",\n  white: \"#FFFFFF\"\n};\n\nSliderBox.defaultProps = {\n  ImageComponent: Image\n};\n"]},"metadata":{},"sourceType":"module"}