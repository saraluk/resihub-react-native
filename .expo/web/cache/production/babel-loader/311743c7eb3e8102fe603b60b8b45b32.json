{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var BaseRouter={getStateForAction:function getStateForAction(state,action){switch(action.type){case'SET_PARAMS':{var index=action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}return _objectSpread({},state,{routes:state.routes.map(function(r,i){return i===index?_objectSpread({},r,{params:_objectSpread({},r.params,{},action.payload.params)}):r;})});}case'RESET':return action.payload;default:return null;}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';}};export default BaseRouter;","map":{"version":3,"sources":["BaseRouter.tsx"],"names":["BaseRouter","getStateForAction","action","index","state","r","routes","params","shouldActionChangeFocus"],"mappings":"k9BAMA,GAAMA,CAAAA,UAAU,CAAG,CACjBC,iBADiB,4BACA,KADA,CACA,MADA,CAIqB,CACpC,OAAQC,MAAM,CAAd,IAAA,EACE,IAAA,YAAA,CAAmB,CACjB,GAAMC,CAAAA,KAAK,CAAGD,MAAM,CAANA,MAAAA,CACVE,KAAK,CAALA,MAAAA,CAAAA,SAAAA,CAAuBC,SAAAA,CAAC,QAAIA,CAAAA,CAAC,CAADA,GAAAA,GAAUH,MAAM,CADlCA,MACc,EAAxBE,CADUF,CAEVE,KAAK,CAFT,KAAA,CAIA,GAAID,KAAK,GAAK,CAAd,CAAA,CAAkB,CAChB,MAAA,KAAA,CACD,CAED,MAAA,CAAA,aAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAEEG,MAAM,CAAE,KAAK,CAAL,MAAA,CAAA,GAAA,CAAiB,SAAA,CAAA,CAAA,CAAA,QACvB,CAAA,CAAC,GAAD,KAAA,CAAA,aAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACYC,MAAM,CAAA,aAAA,CAAA,EAAA,CAAOF,CAAC,CAAR,MAAA,CAAA,EAAA,CAAoBH,MAAM,CAANA,OAAAA,CAApB,MAAA,CADlB,CAAA,CAAA,CADM,CAAiB,EAAjB,CAFV,CAAA,CAAA,CAQD,CAED,IAAA,OAAA,CACE,MAAOA,CAAAA,MAAM,CAAb,OAAA,CAEF,QACE,MAAA,KAAA,CAxBJ,CALe,CAAA,CAiCjBM,uBAjCiB,kCAiCM,MAjCN,CAiCuC,CACtD,MAAON,CAAAA,MAAM,CAANA,IAAAA,GAAP,UAAA,CACD,CAnCgB,CAAnB,CAsCA,cAAA,CAAA,UAAA","sourcesContent":["import { CommonNavigationAction, NavigationState, PartialState } from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex(r => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET':\n        return action.payload as PartialState<State>;\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n"]},"metadata":{},"sourceType":"module"}