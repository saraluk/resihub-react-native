{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import{deviceHeight,deviceWidth}from\"../constants/Layout\";import{Ionicons}from\"@expo/vector-icons\";var SaveButton=function(_Component){_inherits(SaveButton,_Component);function SaveButton(){_classCallCheck(this,SaveButton);return _possibleConstructorReturn(this,_getPrototypeOf(SaveButton).apply(this,arguments));}_createClass(SaveButton,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProp){if(this.props.isSaved!==prevProp.isSaved){console.log(\"SaveButton componentDidUpdate is called\");}}},{key:\"render\",value:function render(){var _this$props=this.props,handleToggle=_this$props.handleToggle,isSaved=_this$props.isSaved;return React.createElement(TouchableHighlight,{onPress:handleToggle,underlayColor:\"transparent\",style:styles.container},React.createElement(View,{style:{height:0.7*(deviceHeight/20),width:4*(deviceWidth/20),flexDirection:\"row\",borderWidth:1,borderRadius:50,borderColor:\"#ef4923\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:isSaved?\"#ef4923\":\"transparent\"}},React.createElement(Ionicons,{style:styles.icon,name:\"ios-bookmark\"}),React.createElement(Text,null,\"Save\")));}}]);return SaveButton;}(Component);export{SaveButton as default};var styles=StyleSheet.create({container:{height:0.7*(deviceHeight/20),width:4*(deviceWidth/20),borderColor:\"#ef4923\",borderWidth:1,borderRadius:50,alignItems:\"center\",justifyContent:\"center\"},icon:{fontSize:0.5*(deviceHeight/20),marginRight:5}});","map":{"version":3,"sources":["/Users/saraluk/Documents/resihub-react-native/components/SaveButton.js"],"names":["React","Component","deviceHeight","deviceWidth","Ionicons","SaveButton","prevProp","props","isSaved","console","log","handleToggle","styles","container","height","width","flexDirection","borderWidth","borderRadius","borderColor","justifyContent","alignItems","backgroundColor","icon","StyleSheet","create","fontSize","marginRight"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,4PAEA,OAASC,YAAT,CAAuBC,WAAvB,2BACA,OAASC,QAAT,KAAyB,oBAAzB,C,GAEqBC,CAAAA,U,8RACAC,Q,CAAU,CAC3B,GAAI,KAAKC,KAAL,CAAWC,OAAX,GAAuBF,QAAQ,CAACE,OAApC,CAA6C,CAC3CC,OAAO,CAACC,GAAR,CAAY,yCAAZ,EACD,CACF,C,uCAEQ,iBAC2B,KAAKH,KADhC,CACCI,YADD,aACCA,YADD,CACeH,OADf,aACeA,OADf,CAEP,MACE,qBAAC,kBAAD,EACE,OAAO,CAAEG,YADX,CAEE,aAAa,CAAC,aAFhB,CAGE,KAAK,CAAEC,MAAM,CAACC,SAHhB,EAKE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,MAAM,CAAE,KAAOZ,YAAY,CAAG,EAAtB,CADH,CAELa,KAAK,CAAE,GAAKZ,WAAW,CAAG,EAAnB,CAFF,CAGLa,aAAa,CAAE,KAHV,CAILC,WAAW,CAAE,CAJR,CAKLC,YAAY,CAAE,EALT,CAMLC,WAAW,CAAE,SANR,CAOLC,cAAc,CAAE,QAPX,CAQLC,UAAU,CAAE,QARP,CASLC,eAAe,CAAEd,OAAO,CAAG,SAAH,CAAe,aATlC,CADT,EAaE,oBAAC,QAAD,EAAU,KAAK,CAAEI,MAAM,CAACW,IAAxB,CAA8B,IAAI,CAAC,cAAnC,EAbF,CAcE,oBAAC,IAAD,aAdF,CALF,CADF,CAwBD,C,wBAjCqCtB,S,SAAnBI,U,aAoCrB,GAAMO,CAAAA,MAAM,CAAGY,UAAU,CAACC,MAAX,CAAkB,CAC/BZ,SAAS,CAAE,CACTC,MAAM,CAAE,KAAOZ,YAAY,CAAG,EAAtB,CADC,CAETa,KAAK,CAAE,GAAKZ,WAAW,CAAG,EAAnB,CAFE,CAGTgB,WAAW,CAAE,SAHJ,CAITF,WAAW,CAAE,CAJJ,CAKTC,YAAY,CAAE,EALL,CAMTG,UAAU,CAAE,QANH,CAOTD,cAAc,CAAE,QAPP,CADoB,CAU/BG,IAAI,CAAE,CACJG,QAAQ,CAAE,KAAOxB,YAAY,CAAG,EAAtB,CADN,CAEJyB,WAAW,CAAE,CAFT,CAVyB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableHighlight } from \"react-native\";\nimport { deviceHeight, deviceWidth } from \"../constants/Layout\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport default class SaveButton extends Component {\n  componentDidUpdate(prevProp) {\n    if (this.props.isSaved !== prevProp.isSaved) {\n      console.log(\"SaveButton componentDidUpdate is called\");\n    }\n  }\n\n  render() {\n    const { handleToggle, isSaved } = this.props;\n    return (\n      <TouchableHighlight\n        onPress={handleToggle}\n        underlayColor='transparent'\n        style={styles.container}\n      >\n        <View\n          style={{\n            height: 0.7 * (deviceHeight / 20),\n            width: 4 * (deviceWidth / 20),\n            flexDirection: \"row\",\n            borderWidth: 1,\n            borderRadius: 50,\n            borderColor: \"#ef4923\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: isSaved ? \"#ef4923\" : \"transparent\",\n          }}\n        >\n          <Ionicons style={styles.icon} name='ios-bookmark' />\n          <Text>Save</Text>\n        </View>\n      </TouchableHighlight>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 0.7 * (deviceHeight / 20),\n    width: 4 * (deviceWidth / 20),\n    borderColor: \"#ef4923\",\n    borderWidth: 1,\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    fontSize: 0.5 * (deviceHeight / 20),\n    marginRight: 5,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}